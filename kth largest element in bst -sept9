class Solution
{
    //inorder traversal of a binary search tree is always in sorted order 
     private:
    void inorder(Node *root,vector<int> &v)
    {
        //v is the array here 
        if(!root) return ;
        inorder(root->left,v);
        v.push_back(root->data );
        inorder(root->right,v);
    }
    public:
    int kthLargest(Node *root, int K)
    {
        //Your code here
        vector<int> v;
        
        inorder(root,v);
        int n=v.size();
       
        return v[n-K];
    }
};
